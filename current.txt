const http = require('http');
const url = require('url');

class ShoppingList {
  constructor() {
    this.groceries = [];
    this.totalPrice = 0;
    this.handleRequest = this.handleRequest.bind(this);
  }

  addItem(name, price) {
    this.groceries.push({ name, price });
    this.calculateTotalPrice();
  }

  calculateTotalPrice() {
    this.totalPrice = this.groceries.reduce((total, item) => total + item.price, 0);
  }

  handleRequest(req, res) {
    const { pathname } = url.parse(req.url, true);

    if (req.method === 'POST' && pathname === '/add-item') {
      let body = '';
      req.on('data', (chunk) => {
        body += chunk.toString();
      }).on('end', () => {
        try {
          const { name, price } = JSON.parse(body);
          if (
            typeof name !== 'string' ||
            typeof price !== 'number' ||
            price < 0
          ) {
            res.writeHead(400, { 'Content-Type': 'text/plain' });
            return res.end('Invalid input data');
          }

          this.addItem(name, price);

          res.writeHead(200, { 'Content-Type': 'application/json' });
          res.end(JSON.stringify({ groceries: this.groceries, totalPrice: this.totalPrice }));
        } catch (err) {
          res.writeHead(400, { 'Content-Type': 'application/json' });
          res.end(JSON.stringify({ message: 'Invalid json format' }));
        }
      });
    } else {
      res.writeHead(404, { 'Content-Type': 'text/plain' });
      res.end('Not Found');
    }
  }
}

const shoppingList = new ShoppingList();

const server = http.createServer((req, res) => shoppingList.handleRequest(req, res));

server.listen(8080, () => {
  console.log(`Server running at port: 8080`);
});

module.exports = shoppingList;
