const http = require('http');
const url = require('url');

class ChatApp {
  constructor() {
    this.messages = [];
    this.handleRequest = this.handleRequest.bind(this);
  }

  sendMessage(username, message) {
    const msg = { username, message };
    this.messages.push(msg);
    return msg;
  }

  listMessages() {
    return this.messages;
  }

  handleRequest(req, res) {
    const { pathname } = url.parse(req.url, true);

    if (req.method === 'POST' && pathname === '/send-message') {
      let body = '';
      req.on('data', chunk => {
        body += chunk.toString();
      }).on('end', () => {
        try {
          const { username, message } = JSON.parse(body);

          // Validation
          if (
            typeof username !== 'string' ||
            typeof message !== 'string' ||
            !username.trim() ||
            !message.trim()
          ) {
            res.writeHead(400, { 'Content-Type': 'text/plain' });
            return res.end('Invalid input data');
          }

          const msg = this.sendMessage(username, message);
          res.writeHead(200, { 'Content-Type': 'application/json' });
          res.end(JSON.stringify(msg));
        } catch (err) {
          res.writeHead(400, { 'Content-Type': 'text/plain' });
          res.end('Invalid input data');
        }
      });
    } else if (req.method === 'GET' && pathname === '/messages') {
      res.writeHead(200, { 'Content-Type': 'application/json' });
      res.end(JSON.stringify(this.listMessages()));
    } else {
      res.writeHead(404, { 'Content-Type': 'text/plain' });
      res.end('Not Found');
    }
  }
}

module.exports = new ChatApp();
